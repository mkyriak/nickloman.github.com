---
layout: post
status: publish
published: true
title: Assessing Ion Torrent assembly quality with Mauve Assembly Metrics
author:
  display_name: Nick Loman
  login: nick
  email: n.j.loman@bham.ac.uk
  url: http://xbase.bham.ac.uk
author_login: nick
author_email: n.j.loman@bham.ac.uk
author_url: http://xbase.bham.ac.uk
wordpress_id: 795
wordpress_url: http://pathogenomics.bham.ac.uk/blog/?p=795
date: '2011-08-15 11:05:47 +0100'
date_gmt: '2011-08-15 11:05:47 +0100'
categories:
- Ion Torrent
tags:
- ion torrent
- e. coli k-12 dh10b
- mauve assembly metrics
- mauve
- snps
comments:
- id: 59728
  author: Aaron Darling
  author_email: aarondarling@ucdavis.edu
  author_url: http://secretmicrobe.org
  date: '2011-08-15 17:57:31 +0100'
  date_gmt: '2011-08-15 17:57:31 +0100'
  content: "Hey Nick, it's great to see someone making use of this software so quickly
    after we got it online.\r\n\r\nI think you've done a pretty fair job interpreting
    the reports generated by the program.  There are a few things I should comment
    on.  First, the large tandemly repeated regions are indeed the weak spot in the
    assembly metrics when calculated on the basis of progressiveMauve alignments.
    \ This shouldn't be a problem in general for the approach of measuring assemblies
    against a high quality reference, and in fact a group of collaborators at UCSC
    and I will soon be publishing another alignment-based system as part of the Assemblathon
    1 paper that should deal with some of these issues, and diploidy, more gracefully.\r\n\r\nSecond
    issue, which is the mixing of assembly and alignment errors. This is a general
    feature of the approach and something we tried to emphasize in the paper. In theory
    if one is really resequencing the same genome (a question you rightly raised),
    then the better the assembly, the easier it should be to align back to the reference.
    \ The situation you encountered here with alignment errors in the 30x and 35x
    assemblies sounds like a pathological (diabolical?) bug in the aligner and is
    something I'll have to investigate more deeply.  Every aligner has bugs and despite
    a couple good years of stamping them out from progressiveMauve there are still
    a few lurking in dark recesses of the codebase...\r\n\r\nThe wiggly background
    GC is a curiosity.  It should indeed be smooth, and I've not seen this before.
    \ I can imagine some things that may have gone wrong but none of them seem very
    likely. Would you be willing to share the assemblies so I can track down what
    happened?  On the other hand it's really interesting to see this plot for IonTorrent
    data.  Every time I've asked one of their sales reps about GC bias I wasn't able
    to get a clear answer.  E. coli is kind of a straw man for GC bias tests, since
    it's got pretty average GC content at around 48%.  For the project which inspired
    Mauve Assembly Metrics we're sequencing 50 or 60 halophilic archaea with GC typically
    at 65-70% and that adds some extra challenge for many sequencing chemistries.
    \ So far we've had good luck with Illumina TruSeq 3 on PCR-free libraries, and
    also with PacBio.\r\n\r\nI would be very interested to hear more about the resolution
    for  the differences you found between the assembly and the reference in regions
    of high coverage.  In addition to them possibly being errors in the IonTorrent
    assembly, or evolved differences, a third possibility is that they are errors
    in the reference assembly constructed in Blattner's lab."
- id: 59729
  author: Nick Loman
  author_email: n.j.loman@bham.ac.uk
  author_url: http://xbase.bham.ac.uk
  date: '2011-08-15 18:37:13 +0100'
  date_gmt: '2011-08-15 18:37:13 +0100'
  content: |-
    Hey Aaron - thanks for the informative reply!

    I would be very keen to know if that alignment issue that crops up with the high-coverage assemblies is fixable. The assemblies are available here: http://static.xbase.ac.uk/files/results/nick/iontorrent_assemblies.tgz - I ran everything with default settings and I used the mauve snapshot dated 2011-08-05.

    That wiggly GC thing is very weird, I don't think it happened the first few times I ran the metrics so not sure exactly what's going on there.

    You are absolutely right to point out that there could be errors in the DH10B reference sequence. I also have some Illumina assemblies from MiSeq data. I will put all that together in another post - if the differences are also seen in that dataset then I guess it is more likely to be errors in the reference.
- id: 59732
  author: Nick Loman
  author_email: n.j.loman@bham.ac.uk
  author_url: http://xbase.bham.ac.uk
  date: '2011-08-16 08:52:58 +0100'
  date_gmt: '2011-08-16 08:52:58 +0100'
  content: Aaron, another question I just wondered about. Is the "broken CDS" count
    inclusive of genes in unaligned regions? I assume not, but just wanted to clarify
    that.
- id: 59753
  author: Aaron Darling
  author_email: aarondarling@ucdavis.edu
  author_url: http://secretmicrobe.org
  date: '2011-08-31 19:03:10 +0100'
  date_gmt: '2011-08-31 19:03:10 +0100'
  content: "Just an update to say the alignment error issues that were cropping up
    on the 30x and 35x assemblies should be largely resolved, thanks again Nick for
    bringing this matter to light.  The usage instructions available here: http://code.google.com/p/ngopt/wiki/How_To_Score_Genome_Assemblies_with_Mauve
    \r\nhave been updated to use the new software revision.\r\n\r\nAs for CDS in unaligned
    regions, these should be included in the count of Broken CDS.  Did you see something
    that suggests otherwise?"
- id: 59874
  author: Ion Torrent Mate Pairs and a single scaffold for E coli K12 substr. MG1655
    &laquo; In between lines of code
  author_email: ''
  author_url: http://flxlexblog.wordpress.com/2012/03/02/ion-torrent-mate-pairs-and-a-single-scaffold-for-e-coli-k12-substr-mg1655/
  date: '2012-03-02 14:45:11 +0000'
  date_gmt: '2012-03-02 14:45:11 +0000'
  content: '[...] For this, I used Mauve Assembly Metrics (see also Nick Loman&#8217;s
    post about this program here). (Due to a bug in the Mauve, at least that is what
    I think caused the crash, I could not get the [...]'
---
<p>[gplusbutton]</p>
<p>I wanted to assess the quality of the assemblies that you might expect to get from assembling Ion Torrent reads <em>de novo </em>for bacterial genomes (see my last post for the <a href="http://pathogenomics.bham.ac.uk/blog/2011/08/ion-torrent-what-is-the-impact-of-the-new-longer-reads-on-assembly/">initial results of assembly</a>).</p>
<p>By good fortune, Aaron Darling of <a href="http://gel.ahabs.wisc.edu/mauve/">Mauve</a> fame just published a <a href="http://bioinformatics.oxfordjournals.org/content/early/2011/08/02/bioinformatics.btr451.short?rss=1">manuscript in Bioinformatics</a> describing <a href="http://code.google.com/p/ngopt/">Mauve Assembly Metrics</a>.</p>
<p>For those not familiar with Mauve it is both a useful whole-genome alignment algorithm (progressiveMauve) and an attractive genome viewer optimised for <em>n-</em>way genome comparisons. It works pretty well for bacterial genome comparisons and should be in your toolkit if it isn't already.</p>
<p>One thing that is not immediately intuitive about Mauve is the way it handles repeats - in comparison to ACT/BLAST it won't align repeat sequences that can't be placed unambiguously. A typical example is the ribosomal RNA operon which often comes out as an ~8kb contig with much greater depth of coverage than the rest of the genome.  Mauve won't be able to place this contig because it could go in multiple places in the genome. This will affect the results of the assembly metrics as well as making you think your genome is "missing" a piece that is in fact there.</p>
<p>Mauve Assembly Metrics takes your draft genome sequences (in contigs) and aligns it against a reference, reordering the contigs and producing reports in both tab-separated values format and accompanying PDF graphs. This is achieved through an R script.</p>
<p>The software comes with an <a href="http://edhar.genomecenter.ucdavis.edu/~koadman/mauve_assembly_metrics_supplementary.pdf">example document</a> which explains the output better than I could.</p>
<p>Some of the metrics offered by the software that I think may be interesting are:</p>
<ul>
<li>Number of miscalls, i.e. SNPs/indels</li>
<li>Number of break-points, i.e. misassemblies within contigs</li>
<li>Number of genes in the reference which are broken, e.g. by a contig end</li>
<li>Gaps in the reference /extra bases</li>
<li>Missing sequence due to GC</li>
</ul>
<p>It seems probable that the best results are going to be obtained when aligning against a close reference. And in theory, the test reads from <em>E. coli K-12 DH10B</em> should be very close to the reference genome. It is worth mentioning that the DH10B sequenced by Life Tech may not be <em>exactly</em> the same as the one <a href="http://jb.asm.org/cgi/content/abstract/190/7/2597">sequenced by Blattner</a>. We may expect SNPs to accumulate over time, e.g. from passage, and indeed this strain is notable for an increased rate of mutation when compared to K-12 MG1655. This is thought to be due to more frequent insertion sequence transpositions. This goes some way to explaining why "the <em>E. coli</em> genome" is not specific, nor is the "<em>E. coli K-12</em> genome". In fact, can you ever sequence "the genome" of anything?</p>
<p>A caveat with Mauve's approach is that the system cannot readily detect the differences between alignment errors and sequencing errors. This is likely to be more of a problem when aligning against more divergent references (we were debating on Twitter whether it would work across different eukaryotic species).</p>
<p>So, let's look at some results.</p>
<p>[table id=5 /]</p>
<p>Interesting! A few things stand-out here. There are some expected trends here - for example, the number of gaps in the reference and the number of gaps in the assembly both reduce as we layer on extra coverage. Also the number of breakpoints/misassemblies as gauged by the "double-cut distance" also reduces.</p>
<p>One striking statistic is that even with the best assembly, 203 genes are broken. This is due to contig ends. This means that 5% of the genes in the genome are not enclosed by individual contigs. The worst assembly (at 10x) has almost 15% of coding sequences disrupted by a contig break. This is going to make life a bit difficult when trying to confidently annotate a genome.</p>
<p><strong>Miscalls</strong></p>
<p>Miscalls I think refer to SNPs and short indels.</p>
<p><a href="http://pathogenomics.bham.ac.uk/blog/wp-content/uploads/miscalls_total.png"><img class="aligncenter size-full wp-image-804" title="miscalls_total" src="http://pathogenomics.bham.ac.uk/blog/wp-content/uploads/miscalls_total-e1313400470434.png" alt="" width="395" height="400" /></a></p>
<p>The number of apparent miscalls goes down as we layer on extra coverage to 20x, but rather curiously we then see an increase in number of miscalls going from 25x to 25x. The 314-long dataset has the most miscalls by far.</p>
<p>Let's try and figure out what's happening here. A useful chart maps this across the genome:</p>
<p style="text-align: center;"><a href="http://pathogenomics.bham.ac.uk/blog/wp-content/uploads/miscalls1.png"><img class="aligncenter size-full wp-image-803" title="miscalls" src="http://pathogenomics.bham.ac.uk/blog/wp-content/uploads/miscalls1-e1313395006935.png" alt="" width="599" height="201" /></a></p>
<p>A few things stand out here. Firstly that you can see that frequency of miscalls in the 10x genome and the 314-long set are significantly higher than the other datasets and this is across the genome.</p>
<p>However, the high coverage datasets have a sharp peak of miscalls around 800kb into the genome. This is the source of the majority of those SNPs and the reason we get an uptrend with increased coverage.</p>
<p>Looking at this alignment in Mauve it is a very low nucleotide identity alignment - and BLASTing the contig back against the reference shows in fact there is a much better place to map the contig, giving 100% identity. So these are false SNP calls. I am not sure why it didn't get picked up by Mauve, perhaps tweaking the parameters would fix it.</p>
<p>I decided to strip this region out (by excluding SNPs occurring &gt;5 times in a sliding window 1,000 bp long, shifted by 100bp). I also discarded SNPs near a contig boundary (&lt;100bp) as this is another source of misalignments.</p>
<p>Then you get the following result:</p>
<p><a href="http://pathogenomics.bham.ac.uk/blog/wp-content/uploads/filtered_miscalls.png"><img class="aligncenter size-full wp-image-807" title="filtered_miscalls" src="http://pathogenomics.bham.ac.uk/blog/wp-content/uploads/filtered_miscalls-e1313400501847.png" alt="" width="399" height="400" /></a></p>
<p>That looks a bit more rational. A quick look at the assembly for the 25x coverage genome doesn't immediately indicate whether these are genuine errors or simply differences from the reference. They are not obviously associated with long homopolymeric tracts and there is often a good, deep consensus. Something for another blog post.</p>
<p>One other thing that is interesting in this plot:</p>
<p style="text-align: center;"><a href="http://pathogenomics.bham.ac.uk/blog/wp-content/uploads/miscalls1.png"><img class="aligncenter" title="miscalls" src="http://pathogenomics.bham.ac.uk/blog/wp-content/uploads/miscalls1-e1313395006935.png" alt="" width="599" height="201" /></a></p>
<p>There is aregion where there are no miscalled bases in the genome, between 500-750kb in the reference. This corresponds to a large 120kb tandem duplication in the DH10B genome. Because we only have a single consensus contig for this repeat Mauve cannot place it correctly and that region ends up being unaligned. It's also the major contribution to the surprising finding that almost 350kb of the genome is not covered, equating to 8%. The truth is it is covered, but not ambiguously.</p>
<p>So this is an example where misalignment can mess your results up.</p>
<p><strong>GC Biases</strong></p>
<p>One more plot, before I sign off.</p>
<p><a href="http://pathogenomics.bham.ac.uk/blog/wp-content/uploads/gc1.png"><img class="aligncenter size-full wp-image-805" title="gc" src="http://pathogenomics.bham.ac.uk/blog/wp-content/uploads/gc1-e1313395236284.png" alt="" width="599" height="361" /></a></p>
<p>Not sure why the background GC plot is so "wiggly". But let's assume its a normal distribution.</p>
<p>It seems missing regions are not generally related to GC content, <strong>except</strong> in the 314-long dataset. I wonder if this reflects some change to the chemistry to coax out longer reads, e.g. the emPCR reaction conditions?</p>
<p><strong>Conclusions</strong></p>
<ul>
<li>Mauve Assembly Metrics gives a useful guide to assembly quality, however misalignments may skew results</li>
<li>The test Ion Torrent 316 data reaches a decent consensus sequence around 20x coverage</li>
<li>Long repeats are always an issue for mapping <em>de novo</em> assemblies</li>
<li>The 314-long dataset has plenty of miscalls, further evidence this is not a high-quality data set</li>
</ul>
<p><span style="float: left; padding: 5px;"><a href="http://www.researchblogging.org"><img style="border: 0;" src="http://www.researchblogging.org/public/citation_icons/rb2_large_gray.png" alt="ResearchBlogging.org" /></a></span><br />
<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.jtitle=Bioinformatics&amp;rft_id=info%3Adoi%2F10.1093%2Fbioinformatics%2Fbtr451&amp;rfr_id=info%3Asid%2Fresearchblogging.org&amp;rft.atitle=Mauve+Assembly+Metrics&amp;rft.issn=1367-4803&amp;rft.date=2011&amp;rft.volume=&amp;rft.issue=&amp;rft.spage=&amp;rft.epage=&amp;rft.artnum=http%3A%2F%2Fbioinformatics.oxfordjournals.org%2Fcgi%2Fdoi%2F10.1093%2Fbioinformatics%2Fbtr451&amp;rft.au=Darling%2C+A.&amp;rft.au=Tritt%2C+A.&amp;rft.au=Eisen%2C+J.&amp;rft.au=Facciotti%2C+M.&amp;rfe_dat=bpr3.included=1;bpr3.tags=Biology%2CMicrobiology%2C+Genetics%2C+Systems+Biology%2C+Bioinformatics%2C+Biotechnology%2C+Computational+Biology%2C+Molecular+Biology">Darling, A., Tritt, A., Eisen, J., &amp; Facciotti, M. (2011). Mauve Assembly Metrics <span style="font-style: italic;">Bioinformatics</span> DOI: <a href="http://dx.doi.org/10.1093/bioinformatics/btr451" rev="review">10.1093/bioinformatics/btr451</a></span></p>
